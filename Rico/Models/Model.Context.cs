//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rico.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DieutriungthuEntities : DbContext
    {
        public DieutriungthuEntities()
            : base("name=DieutriungthuEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Advertise> Advertises { get; set; }
        public DbSet<Bank> Banks { get; set; }
        public DbSet<Bill_Customer> Bill_Customer { get; set; }
        public DbSet<Category> Categories { get; set; }
        public DbSet<CatPermission> CatPermissions { get; set; }
        public DbSet<Color> Colors { get; set; }
        public DbSet<Config> Configs { get; set; }
        public DbSet<Contact> Contacts { get; set; }
        public DbSet<Country> Countries { get; set; }
        public DbSet<Customer> Customers { get; set; }
        public DbSet<Export> Exports { get; set; }
        public DbSet<ExportDetail> ExportDetails { get; set; }
        public DbSet<GroupMember> GroupMembers { get; set; }
        public DbSet<GroupNew> GroupNews { get; set; }
        public DbSet<GroupPicture> GroupPictures { get; set; }
        public DbSet<GroupProduct> GroupProducts { get; set; }
        public DbSet<Import> Imports { get; set; }
        public DbSet<ImportDetail> ImportDetails { get; set; }
        public DbSet<Member> Members { get; set; }
        public DbSet<MemberWareHouse> MemberWareHouses { get; set; }
        public DbSet<Menu> Menus { get; set; }
        public DbSet<News> News { get; set; }
        public DbSet<Ord> Ords { get; set; }
        public DbSet<OrderDetail> OrderDetails { get; set; }
        public DbSet<PermissionModule> PermissionModules { get; set; }
        public DbSet<Picture> Pictures { get; set; }
        public DbSet<Price> Prices { get; set; }
        public DbSet<PriceCity> PriceCities { get; set; }
        public DbSet<ProColor> ProColors { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<ProImage> ProImages { get; set; }
        public DbSet<ProPrice> ProPrices { get; set; }
        public DbSet<ProSize> ProSizes { get; set; }
        public DbSet<Province> Provinces { get; set; }
        public DbSet<Province_Price> Province_Price { get; set; }
        public DbSet<Recipient> Recipients { get; set; }
        public DbSet<SearchPrice> SearchPrices { get; set; }
        public DbSet<Shop> Shops { get; set; }
        public DbSet<Size> Sizes { get; set; }
        public DbSet<Supplier> Suppliers { get; set; }
        public DbSet<Support> Supports { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<UserModule> UserModules { get; set; }
        public DbSet<WareHouse> WareHouses { get; set; }
        public DbSet<v_GroupNewsInNews> v_GroupNewsInNews { get; set; }
        public DbSet<v_News_GroupNews> v_News_GroupNews { get; set; }
        public DbSet<v_OrderDetail_Product> v_OrderDetail_Product { get; set; }
        public DbSet<v_Picture_NameGroup> v_Picture_NameGroup { get; set; }
        public DbSet<v_Product_NameGroup> v_Product_NameGroup { get; set; }
        public DbSet<v_Top5Order> v_Top5Order { get; set; }
    
        public virtual int sp_Advertise_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Advertise_GetByAll_Result> sp_Advertise_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Advertise_GetByAll_Result>("sp_Advertise_GetByAll");
        }
    
        public virtual ObjectResult<sp_Advertise_GetById_Result> sp_Advertise_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Advertise_GetById_Result>("sp_Advertise_GetById", idParameter);
        }
    
        public virtual int sp_Advertise_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Advertise_Insert(string name, string detail, string target, string link, string image, Nullable<bool> active, Nullable<int> width, Nullable<int> height, Nullable<int> position, Nullable<int> ord)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_Insert", nameParameter, detailParameter, targetParameter, linkParameter, imageParameter, activeParameter, widthParameter, heightParameter, positionParameter, ordParameter);
        }
    
        public virtual ObjectResult<sp_Advertise_Paging_Result> sp_Advertise_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Advertise_Paging_Result>("sp_Advertise_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Advertise_Update(Nullable<int> id, string name, string detail, string target, string link, string image, Nullable<bool> active, Nullable<int> width, Nullable<int> height, Nullable<int> position, Nullable<int> ord)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_Update", idParameter, nameParameter, detailParameter, targetParameter, linkParameter, imageParameter, activeParameter, widthParameter, heightParameter, positionParameter, ordParameter);
        }
    
        public virtual int sp_Bank_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Bank_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Bank_GetByAll_Result> sp_Bank_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Bank_GetByAll_Result>("sp_Bank_GetByAll");
        }
    
        public virtual ObjectResult<sp_Bank_GetById_Result> sp_Bank_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Bank_GetById_Result>("sp_Bank_GetById", idParameter);
        }
    
        public virtual int sp_Bank_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Bank_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Bank_Insert(string name, string image, Nullable<int> ord, Nullable<bool> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Bank_Insert", nameParameter, imageParameter, ordParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_Bank_Paging_Result> sp_Bank_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Bank_Paging_Result>("sp_Bank_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Bank_Update(Nullable<int> id, string name, string image, Nullable<int> ord, Nullable<bool> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Bank_Update", idParameter, nameParameter, imageParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_Bill_Customer_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Bill_Customer_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Bill_Customer_GetByAll_Result> sp_Bill_Customer_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Bill_Customer_GetByAll_Result>("sp_Bill_Customer_GetByAll");
        }
    
        public virtual ObjectResult<sp_Bill_Customer_GetById_Result> sp_Bill_Customer_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Bill_Customer_GetById_Result>("sp_Bill_Customer_GetById", idParameter);
        }
    
        public virtual int sp_Bill_Customer_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Bill_Customer_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Bill_Customer_Insert(string name, string email, string birthday, string mobile, string tel, string address, Nullable<System.DateTime> sDate, Nullable<int> status, Nullable<int> idCus)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var birthdayParameter = birthday != null ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var idCusParameter = idCus.HasValue ?
                new ObjectParameter("IdCus", idCus) :
                new ObjectParameter("IdCus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Bill_Customer_Insert", nameParameter, emailParameter, birthdayParameter, mobileParameter, telParameter, addressParameter, sDateParameter, statusParameter, idCusParameter);
        }
    
        public virtual ObjectResult<sp_Bill_Customer_Paging_Result> sp_Bill_Customer_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Bill_Customer_Paging_Result>("sp_Bill_Customer_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Bill_Customer_Update(Nullable<int> id, string name, string email, string birthday, string mobile, string tel, string address, Nullable<System.DateTime> sDate, Nullable<int> status, Nullable<int> idCus)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var birthdayParameter = birthday != null ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var idCusParameter = idCus.HasValue ?
                new ObjectParameter("IdCus", idCus) :
                new ObjectParameter("IdCus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Bill_Customer_Update", idParameter, nameParameter, emailParameter, birthdayParameter, mobileParameter, telParameter, addressParameter, sDateParameter, statusParameter, idCusParameter);
        }
    
        public virtual int sp_Category_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Category_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Category_GetByAll_Result> sp_Category_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Category_GetByAll_Result>("sp_Category_GetByAll");
        }
    
        public virtual ObjectResult<sp_Category_GetById_Result> sp_Category_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Category_GetById_Result>("sp_Category_GetById", idParameter);
        }
    
        public virtual int sp_Category_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Category_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Category_Insert(string name, string detail, string title, string description, string keyword, string tag, string level, Nullable<bool> index, Nullable<bool> priority, Nullable<bool> active, Nullable<int> ord, Nullable<int> idGroupPro)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var idGroupProParameter = idGroupPro.HasValue ?
                new ObjectParameter("IdGroupPro", idGroupPro) :
                new ObjectParameter("IdGroupPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Category_Insert", nameParameter, detailParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, levelParameter, indexParameter, priorityParameter, activeParameter, ordParameter, idGroupProParameter);
        }
    
        public virtual ObjectResult<sp_Category_Paging_Result> sp_Category_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Category_Paging_Result>("sp_Category_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Category_Update(Nullable<int> id, string name, string detail, string title, string description, string keyword, string tag, string level, Nullable<bool> index, Nullable<bool> priority, Nullable<bool> active, Nullable<int> ord, Nullable<int> idGroupPro)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var idGroupProParameter = idGroupPro.HasValue ?
                new ObjectParameter("IdGroupPro", idGroupPro) :
                new ObjectParameter("IdGroupPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Category_Update", idParameter, nameParameter, detailParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, levelParameter, indexParameter, priorityParameter, activeParameter, ordParameter, idGroupProParameter);
        }
    
        public virtual int sp_CatPermission_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CatPermission_Delete", iDParameter);
        }
    
        public virtual ObjectResult<sp_CatPermission_GetByAll_Result> sp_CatPermission_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CatPermission_GetByAll_Result>("sp_CatPermission_GetByAll");
        }
    
        public virtual ObjectResult<sp_CatPermission_GetById_Result> sp_CatPermission_GetById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CatPermission_GetById_Result>("sp_CatPermission_GetById", iDParameter);
        }
    
        public virtual int sp_CatPermission_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CatPermission_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_CatPermission_Insert(Nullable<int> userID, Nullable<int> catID, Nullable<bool> view, Nullable<bool> full)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var viewParameter = view.HasValue ?
                new ObjectParameter("View", view) :
                new ObjectParameter("View", typeof(bool));
    
            var fullParameter = full.HasValue ?
                new ObjectParameter("Full", full) :
                new ObjectParameter("Full", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CatPermission_Insert", userIDParameter, catIDParameter, viewParameter, fullParameter);
        }
    
        public virtual ObjectResult<sp_CatPermission_Paging_Result> sp_CatPermission_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CatPermission_Paging_Result>("sp_CatPermission_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_CatPermission_Update(Nullable<int> iD, Nullable<int> userID, Nullable<int> catID, Nullable<bool> view, Nullable<bool> full)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var viewParameter = view.HasValue ?
                new ObjectParameter("View", view) :
                new ObjectParameter("View", typeof(bool));
    
            var fullParameter = full.HasValue ?
                new ObjectParameter("Full", full) :
                new ObjectParameter("Full", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CatPermission_Update", iDParameter, userIDParameter, catIDParameter, viewParameter, fullParameter);
        }
    
        public virtual int sp_Color_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Color_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Color_GetByAll_Result> sp_Color_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Color_GetByAll_Result>("sp_Color_GetByAll");
        }
    
        public virtual ObjectResult<sp_Color_GetById_Result> sp_Color_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Color_GetById_Result>("sp_Color_GetById", idParameter);
        }
    
        public virtual int sp_Color_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Color_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Color_Insert(string name, string image, string description, Nullable<int> ord, Nullable<bool> active, Nullable<bool> @default)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var defaultParameter = @default.HasValue ?
                new ObjectParameter("Default", @default) :
                new ObjectParameter("Default", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Color_Insert", nameParameter, imageParameter, descriptionParameter, ordParameter, activeParameter, defaultParameter);
        }
    
        public virtual ObjectResult<sp_Color_Paging_Result> sp_Color_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Color_Paging_Result>("sp_Color_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Color_Update(Nullable<int> id, string name, string image, string description, Nullable<int> ord, Nullable<bool> active, Nullable<bool> @default)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var defaultParameter = @default.HasValue ?
                new ObjectParameter("Default", @default) :
                new ObjectParameter("Default", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Color_Update", idParameter, nameParameter, imageParameter, descriptionParameter, ordParameter, activeParameter, defaultParameter);
        }
    
        public virtual int sp_Config_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Config_GetById_Result> sp_Config_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Config_GetById_Result>("sp_Config_GetById", idParameter);
        }
    
        public virtual int sp_Config_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Config_Insert(string title, string description, string keyword, string phone, string email, string website, string facebook, string faceAppID, string googleId, string copyright)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var facebookParameter = facebook != null ?
                new ObjectParameter("Facebook", facebook) :
                new ObjectParameter("Facebook", typeof(string));
    
            var faceAppIDParameter = faceAppID != null ?
                new ObjectParameter("FaceAppID", faceAppID) :
                new ObjectParameter("FaceAppID", typeof(string));
    
            var googleIdParameter = googleId != null ?
                new ObjectParameter("GoogleId", googleId) :
                new ObjectParameter("GoogleId", typeof(string));
    
            var copyrightParameter = copyright != null ?
                new ObjectParameter("Copyright", copyright) :
                new ObjectParameter("Copyright", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Insert", titleParameter, descriptionParameter, keywordParameter, phoneParameter, emailParameter, websiteParameter, facebookParameter, faceAppIDParameter, googleIdParameter, copyrightParameter);
        }
    
        public virtual int sp_Config_Update(Nullable<int> id, string title, string description, string keyword, string phone, string email, string website, string facebook, string faceAppID, string googleId, string copyright)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var facebookParameter = facebook != null ?
                new ObjectParameter("Facebook", facebook) :
                new ObjectParameter("Facebook", typeof(string));
    
            var faceAppIDParameter = faceAppID != null ?
                new ObjectParameter("FaceAppID", faceAppID) :
                new ObjectParameter("FaceAppID", typeof(string));
    
            var googleIdParameter = googleId != null ?
                new ObjectParameter("GoogleId", googleId) :
                new ObjectParameter("GoogleId", typeof(string));
    
            var copyrightParameter = copyright != null ?
                new ObjectParameter("Copyright", copyright) :
                new ObjectParameter("Copyright", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Update", idParameter, titleParameter, descriptionParameter, keywordParameter, phoneParameter, emailParameter, websiteParameter, facebookParameter, faceAppIDParameter, googleIdParameter, copyrightParameter);
        }
    
        public virtual int sp_Contact_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Contact_GetByAll_Result> sp_Contact_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Contact_GetByAll_Result>("sp_Contact_GetByAll");
        }
    
        public virtual ObjectResult<sp_Contact_GetById_Result> sp_Contact_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Contact_GetById_Result>("sp_Contact_GetById", idParameter);
        }
    
        public virtual int sp_Contact_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Contact_Insert(string name, string title, string address, string email, string phone, string company, string detail, Nullable<System.DateTime> sDate, Nullable<bool> status)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Insert", nameParameter, titleParameter, addressParameter, emailParameter, phoneParameter, companyParameter, detailParameter, sDateParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_Contact_Paging_Result> sp_Contact_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Contact_Paging_Result>("sp_Contact_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Contact_Update(Nullable<int> id, string name, string title, string address, string email, string phone, string company, string detail, Nullable<System.DateTime> sDate, Nullable<bool> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Update", idParameter, nameParameter, titleParameter, addressParameter, emailParameter, phoneParameter, companyParameter, detailParameter, sDateParameter, statusParameter);
        }
    
        public virtual int sp_Country_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Country_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Country_GetByAll_Result> sp_Country_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Country_GetByAll_Result>("sp_Country_GetByAll");
        }
    
        public virtual ObjectResult<sp_Country_GetById_Result> sp_Country_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Country_GetById_Result>("sp_Country_GetById", idParameter);
        }
    
        public virtual int sp_Country_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Country_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Country_Insert(string name, string logo, Nullable<int> ord, string description, Nullable<bool> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Country_Insert", nameParameter, logoParameter, ordParameter, descriptionParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_Country_Paging_Result> sp_Country_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Country_Paging_Result>("sp_Country_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Country_Update(Nullable<int> id, string name, string logo, Nullable<int> ord, string description, Nullable<bool> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Country_Update", idParameter, nameParameter, logoParameter, ordParameter, descriptionParameter, activeParameter);
        }
    
        public virtual int sp_Customer_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Customer_GetByAll_Result> sp_Customer_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Customer_GetByAll_Result>("sp_Customer_GetByAll");
        }
    
        public virtual ObjectResult<sp_Customer_GetById_Result> sp_Customer_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Customer_GetById_Result>("sp_Customer_GetById", idParameter);
        }
    
        public virtual int sp_Customer_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Customer_Insert(string name, string email, string password, string tel, string address, string ward, Nullable<int> province, Nullable<System.DateTime> sDate, Nullable<bool> status)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var wardParameter = ward != null ?
                new ObjectParameter("Ward", ward) :
                new ObjectParameter("Ward", typeof(string));
    
            var provinceParameter = province.HasValue ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(int));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_Insert", nameParameter, emailParameter, passwordParameter, telParameter, addressParameter, wardParameter, provinceParameter, sDateParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_Customer_Paging_Result> sp_Customer_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Customer_Paging_Result>("sp_Customer_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Customer_Update(Nullable<int> id, string name, string email, string password, string tel, string address, string ward, Nullable<int> province, Nullable<System.DateTime> sDate, Nullable<bool> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var wardParameter = ward != null ?
                new ObjectParameter("Ward", ward) :
                new ObjectParameter("Ward", typeof(string));
    
            var provinceParameter = province.HasValue ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(int));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_Update", idParameter, nameParameter, emailParameter, passwordParameter, telParameter, addressParameter, wardParameter, provinceParameter, sDateParameter, statusParameter);
        }
    
        public virtual int sp_Export_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Export_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Export_GetByAll_Result> sp_Export_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Export_GetByAll_Result>("sp_Export_GetByAll");
        }
    
        public virtual ObjectResult<sp_Export_GetById_Result> sp_Export_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Export_GetById_Result>("sp_Export_GetById", idParameter);
        }
    
        public virtual int sp_Export_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Export_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Export_Insert(string cusName, Nullable<System.DateTime> sDate, Nullable<double> amount, Nullable<int> idMember, Nullable<int> idWareHouse, string description, Nullable<int> ord)
        {
            var cusNameParameter = cusName != null ?
                new ObjectParameter("CusName", cusName) :
                new ObjectParameter("CusName", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            var idMemberParameter = idMember.HasValue ?
                new ObjectParameter("IdMember", idMember) :
                new ObjectParameter("IdMember", typeof(int));
    
            var idWareHouseParameter = idWareHouse.HasValue ?
                new ObjectParameter("IdWareHouse", idWareHouse) :
                new ObjectParameter("IdWareHouse", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Export_Insert", cusNameParameter, sDateParameter, amountParameter, idMemberParameter, idWareHouseParameter, descriptionParameter, ordParameter);
        }
    
        public virtual ObjectResult<sp_Export_Paging_Result> sp_Export_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Export_Paging_Result>("sp_Export_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Export_Update(Nullable<int> id, string cusName, Nullable<System.DateTime> sDate, Nullable<double> amount, Nullable<int> idMember, Nullable<int> idWareHouse, string description, Nullable<int> ord)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var cusNameParameter = cusName != null ?
                new ObjectParameter("CusName", cusName) :
                new ObjectParameter("CusName", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            var idMemberParameter = idMember.HasValue ?
                new ObjectParameter("IdMember", idMember) :
                new ObjectParameter("IdMember", typeof(int));
    
            var idWareHouseParameter = idWareHouse.HasValue ?
                new ObjectParameter("IdWareHouse", idWareHouse) :
                new ObjectParameter("IdWareHouse", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Export_Update", idParameter, cusNameParameter, sDateParameter, amountParameter, idMemberParameter, idWareHouseParameter, descriptionParameter, ordParameter);
        }
    
        public virtual int sp_ExportDetail_Delete(Nullable<int> id, Nullable<int> idExport, Nullable<int> idPro)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idExportParameter = idExport.HasValue ?
                new ObjectParameter("IdExport", idExport) :
                new ObjectParameter("IdExport", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ExportDetail_Delete", idParameter, idExportParameter, idProParameter);
        }
    
        public virtual ObjectResult<sp_ExportDetail_GetByAll_Result> sp_ExportDetail_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ExportDetail_GetByAll_Result>("sp_ExportDetail_GetByAll");
        }
    
        public virtual ObjectResult<sp_ExportDetail_GetById_Result> sp_ExportDetail_GetById(Nullable<int> id, Nullable<int> idExport, Nullable<int> idPro)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idExportParameter = idExport.HasValue ?
                new ObjectParameter("IdExport", idExport) :
                new ObjectParameter("IdExport", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ExportDetail_GetById_Result>("sp_ExportDetail_GetById", idParameter, idExportParameter, idProParameter);
        }
    
        public virtual int sp_ExportDetail_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ExportDetail_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_ExportDetail_Insert(Nullable<int> idExport, Nullable<int> idPro, Nullable<int> number, Nullable<double> price, Nullable<double> total, Nullable<int> ord)
        {
            var idExportParameter = idExport.HasValue ?
                new ObjectParameter("IdExport", idExport) :
                new ObjectParameter("IdExport", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(double));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ExportDetail_Insert", idExportParameter, idProParameter, numberParameter, priceParameter, totalParameter, ordParameter);
        }
    
        public virtual ObjectResult<sp_ExportDetail_Paging_Result> sp_ExportDetail_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ExportDetail_Paging_Result>("sp_ExportDetail_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_ExportDetail_Update(Nullable<int> id, Nullable<int> idExport, Nullable<int> idPro, Nullable<int> number, Nullable<double> price, Nullable<double> total, Nullable<int> ord)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idExportParameter = idExport.HasValue ?
                new ObjectParameter("IdExport", idExport) :
                new ObjectParameter("IdExport", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(double));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ExportDetail_Update", idParameter, idExportParameter, idProParameter, numberParameter, priceParameter, totalParameter, ordParameter);
        }
    
        public virtual int sp_GroupMember_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupMember_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupMember_GetByAll_Result> sp_GroupMember_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupMember_GetByAll_Result>("sp_GroupMember_GetByAll");
        }
    
        public virtual ObjectResult<sp_GroupMember_GetById_Result> sp_GroupMember_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupMember_GetById_Result>("sp_GroupMember_GetById", idParameter);
        }
    
        public virtual int sp_GroupMember_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupMember_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupMember_Insert(string name, Nullable<bool> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupMember_Insert", nameParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_GroupMember_Paging_Result> sp_GroupMember_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupMember_Paging_Result>("sp_GroupMember_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_GroupMember_Update(Nullable<int> id, string name, Nullable<bool> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupMember_Update", idParameter, nameParameter, activeParameter);
        }
    
        public virtual int sp_GroupNews_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupNews_GetByAll_Result> sp_GroupNews_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_GetByAll_Result>("sp_GroupNews_GetByAll");
        }
    
        public virtual ObjectResult<sp_GroupNews_GetById_Result> sp_GroupNews_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_GetById_Result>("sp_GroupNews_GetById", idParameter);
        }
    
        public virtual int sp_GroupNews_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupNews_Insert(string name, string title, string description, string keyword, string detail, string tag, string image, string level, Nullable<bool> index, Nullable<bool> priority, Nullable<bool> active, Nullable<int> ord, Nullable<int> parentId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Insert", nameParameter, titleParameter, descriptionParameter, keywordParameter, detailParameter, tagParameter, imageParameter, levelParameter, indexParameter, priorityParameter, activeParameter, ordParameter, parentIdParameter);
        }
    
        public virtual ObjectResult<sp_GroupNews_Paging_Result> sp_GroupNews_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_Paging_Result>("sp_GroupNews_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_GroupNews_Update(Nullable<int> id, string name, string title, string description, string keyword, string detail, string tag, string image, string level, Nullable<bool> index, Nullable<bool> priority, Nullable<bool> active, Nullable<int> ord, Nullable<int> parentId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Update", idParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, detailParameter, tagParameter, imageParameter, levelParameter, indexParameter, priorityParameter, activeParameter, ordParameter, parentIdParameter);
        }
    
        public virtual int sp_GroupPicture_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupPicture_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupPicture_GetByAll_Result> sp_GroupPicture_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupPicture_GetByAll_Result>("sp_GroupPicture_GetByAll");
        }
    
        public virtual ObjectResult<sp_GroupPicture_GetById_Result> sp_GroupPicture_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupPicture_GetById_Result>("sp_GroupPicture_GetById", idParameter);
        }
    
        public virtual int sp_GroupPicture_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupPicture_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupPicture_Insert(string name, string title, string description, string keyword, string place, string tag, string image, string level, Nullable<System.DateTime> sDate, Nullable<bool> index, Nullable<bool> priority, Nullable<bool> active, Nullable<int> ord, Nullable<int> parentId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupPicture_Insert", nameParameter, titleParameter, descriptionParameter, keywordParameter, placeParameter, tagParameter, imageParameter, levelParameter, sDateParameter, indexParameter, priorityParameter, activeParameter, ordParameter, parentIdParameter);
        }
    
        public virtual ObjectResult<sp_GroupPicture_Paging_Result> sp_GroupPicture_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupPicture_Paging_Result>("sp_GroupPicture_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_GroupPicture_Update(Nullable<int> id, string name, string title, string description, string keyword, string place, string tag, string image, string level, Nullable<System.DateTime> sDate, Nullable<bool> index, Nullable<bool> priority, Nullable<bool> active, Nullable<int> ord, Nullable<int> parentId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupPicture_Update", idParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, placeParameter, tagParameter, imageParameter, levelParameter, sDateParameter, indexParameter, priorityParameter, activeParameter, ordParameter, parentIdParameter);
        }
    
        public virtual int sp_GroupProduct_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupProduct_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupProduct_GetByAll_Result> sp_GroupProduct_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupProduct_GetByAll_Result>("sp_GroupProduct_GetByAll");
        }
    
        public virtual ObjectResult<sp_GroupProduct_GetById_Result> sp_GroupProduct_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupProduct_GetById_Result>("sp_GroupProduct_GetById", idParameter);
        }
    
        public virtual int sp_GroupProduct_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupProduct_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupProduct_Insert(string name, string detail, string title, string description, string keyword, string tag, string image, string level, Nullable<System.DateTime> sDate, Nullable<bool> index, Nullable<bool> priority, Nullable<bool> active, Nullable<int> ord, Nullable<int> parentId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupProduct_Insert", nameParameter, detailParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, imageParameter, levelParameter, sDateParameter, indexParameter, priorityParameter, activeParameter, ordParameter, parentIdParameter);
        }
    
        public virtual ObjectResult<sp_GroupProduct_Paging_Result> sp_GroupProduct_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupProduct_Paging_Result>("sp_GroupProduct_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_GroupProduct_Update(Nullable<int> id, string name, string detail, string title, string description, string keyword, string tag, string image, string level, Nullable<System.DateTime> sDate, Nullable<bool> index, Nullable<bool> priority, Nullable<bool> active, Nullable<int> ord, Nullable<int> parentId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupProduct_Update", idParameter, nameParameter, detailParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, imageParameter, levelParameter, sDateParameter, indexParameter, priorityParameter, activeParameter, ordParameter, parentIdParameter);
        }
    
        public virtual int sp_Import_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Import_GetByAll_Result> sp_Import_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Import_GetByAll_Result>("sp_Import_GetByAll");
        }
    
        public virtual ObjectResult<sp_Import_GetById_Result> sp_Import_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Import_GetById_Result>("sp_Import_GetById", idParameter);
        }
    
        public virtual int sp_Import_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Import_Insert(Nullable<int> idSupplier, Nullable<System.DateTime> sDate, Nullable<double> amount, Nullable<int> idMember, Nullable<int> idWareHouse, Nullable<int> ord, string description)
        {
            var idSupplierParameter = idSupplier.HasValue ?
                new ObjectParameter("IdSupplier", idSupplier) :
                new ObjectParameter("IdSupplier", typeof(int));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            var idMemberParameter = idMember.HasValue ?
                new ObjectParameter("IdMember", idMember) :
                new ObjectParameter("IdMember", typeof(int));
    
            var idWareHouseParameter = idWareHouse.HasValue ?
                new ObjectParameter("IdWareHouse", idWareHouse) :
                new ObjectParameter("IdWareHouse", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_Insert", idSupplierParameter, sDateParameter, amountParameter, idMemberParameter, idWareHouseParameter, ordParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<sp_Import_Paging_Result> sp_Import_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Import_Paging_Result>("sp_Import_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Import_Update(Nullable<int> id, Nullable<int> idSupplier, Nullable<System.DateTime> sDate, Nullable<double> amount, Nullable<int> idMember, Nullable<int> idWareHouse, Nullable<int> ord, string description)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idSupplierParameter = idSupplier.HasValue ?
                new ObjectParameter("IdSupplier", idSupplier) :
                new ObjectParameter("IdSupplier", typeof(int));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            var idMemberParameter = idMember.HasValue ?
                new ObjectParameter("IdMember", idMember) :
                new ObjectParameter("IdMember", typeof(int));
    
            var idWareHouseParameter = idWareHouse.HasValue ?
                new ObjectParameter("IdWareHouse", idWareHouse) :
                new ObjectParameter("IdWareHouse", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_Update", idParameter, idSupplierParameter, sDateParameter, amountParameter, idMemberParameter, idWareHouseParameter, ordParameter, descriptionParameter);
        }
    
        public virtual int sp_Member_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Member_GetByAll_Result> sp_Member_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Member_GetByAll_Result>("sp_Member_GetByAll");
        }
    
        public virtual ObjectResult<sp_Member_GetById_Result> sp_Member_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Member_GetById_Result>("sp_Member_GetById", idParameter);
        }
    
        public virtual int sp_Member_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Member_Insert(string name, string username, string password, Nullable<int> permiss, Nullable<bool> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var permissParameter = permiss.HasValue ?
                new ObjectParameter("Permiss", permiss) :
                new ObjectParameter("Permiss", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_Insert", nameParameter, usernameParameter, passwordParameter, permissParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_Member_Paging_Result> sp_Member_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Member_Paging_Result>("sp_Member_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Member_Update(Nullable<int> id, string name, string username, string password, Nullable<int> permiss, Nullable<bool> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var permissParameter = permiss.HasValue ?
                new ObjectParameter("Permiss", permiss) :
                new ObjectParameter("Permiss", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_Update", idParameter, nameParameter, usernameParameter, passwordParameter, permissParameter, activeParameter);
        }
    
        public virtual int sp_MemberWareHouse_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MemberWareHouse_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_MemberWareHouse_GetByAll_Result> sp_MemberWareHouse_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MemberWareHouse_GetByAll_Result>("sp_MemberWareHouse_GetByAll");
        }
    
        public virtual ObjectResult<sp_MemberWareHouse_GetById_Result> sp_MemberWareHouse_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MemberWareHouse_GetById_Result>("sp_MemberWareHouse_GetById", idParameter);
        }
    
        public virtual int sp_MemberWareHouse_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MemberWareHouse_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_MemberWareHouse_Insert(Nullable<int> idMember, Nullable<int> idWareHouse, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate, Nullable<int> ord)
        {
            var idMemberParameter = idMember.HasValue ?
                new ObjectParameter("IdMember", idMember) :
                new ObjectParameter("IdMember", typeof(int));
    
            var idWareHouseParameter = idWareHouse.HasValue ?
                new ObjectParameter("IdWareHouse", idWareHouse) :
                new ObjectParameter("IdWareHouse", typeof(int));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MemberWareHouse_Insert", idMemberParameter, idWareHouseParameter, sDateParameter, eDateParameter, ordParameter);
        }
    
        public virtual ObjectResult<sp_MemberWareHouse_Paging_Result> sp_MemberWareHouse_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MemberWareHouse_Paging_Result>("sp_MemberWareHouse_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_MemberWareHouse_Update(Nullable<int> id, Nullable<int> idMember, Nullable<int> idWareHouse, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate, Nullable<int> ord)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idMemberParameter = idMember.HasValue ?
                new ObjectParameter("IdMember", idMember) :
                new ObjectParameter("IdMember", typeof(int));
    
            var idWareHouseParameter = idWareHouse.HasValue ?
                new ObjectParameter("IdWareHouse", idWareHouse) :
                new ObjectParameter("IdWareHouse", typeof(int));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MemberWareHouse_Update", idParameter, idMemberParameter, idWareHouseParameter, sDateParameter, eDateParameter, ordParameter);
        }
    
        public virtual int sp_Menu_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Menu_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Menu_GetByAll_Result> sp_Menu_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_GetByAll_Result>("sp_Menu_GetByAll");
        }
    
        public virtual ObjectResult<sp_Menu_GetById_Result> sp_Menu_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_GetById_Result>("sp_Menu_GetById", idParameter);
        }
    
        public virtual int sp_Menu_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Menu_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Menu_Insert(string name, string title, string description, string keyword, string content, string detail, string target, string link, string tag, string image, string level, Nullable<bool> active, Nullable<int> position, Nullable<int> ord, Nullable<int> mobile, Nullable<int> idCategory)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var mobileParameter = mobile.HasValue ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(int));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Menu_Insert", nameParameter, titleParameter, descriptionParameter, keywordParameter, contentParameter, detailParameter, targetParameter, linkParameter, tagParameter, imageParameter, levelParameter, activeParameter, positionParameter, ordParameter, mobileParameter, idCategoryParameter);
        }
    
        public virtual ObjectResult<sp_Menu_Paging_Result> sp_Menu_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_Paging_Result>("sp_Menu_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Menu_Update(Nullable<int> id, string name, string title, string description, string keyword, string content, string detail, string target, string link, string tag, string image, string level, Nullable<bool> active, Nullable<int> position, Nullable<int> ord, Nullable<int> mobile, Nullable<int> idCategory)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var mobileParameter = mobile.HasValue ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(int));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Menu_Update", idParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, contentParameter, detailParameter, targetParameter, linkParameter, tagParameter, imageParameter, levelParameter, activeParameter, positionParameter, ordParameter, mobileParameter, idCategoryParameter);
        }
    
        public virtual int sp_News_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_News_GetByAll_Result> sp_News_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_GetByAll_Result>("sp_News_GetByAll");
        }
    
        public virtual ObjectResult<sp_News_GetByAll_GroupNews_Result> sp_News_GetByAll_GroupNews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_GetByAll_GroupNews_Result>("sp_News_GetByAll_GroupNews");
        }
    
        public virtual ObjectResult<sp_News_GetById_Result> sp_News_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_GetById_Result>("sp_News_GetById", idParameter);
        }
    
        public virtual int sp_News_GetBySDate(string where, string mDate)
        {
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var mDateParameter = mDate != null ?
                new ObjectParameter("MDate", mDate) :
                new ObjectParameter("MDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_GetBySDate", whereParameter, mDateParameter);
        }
    
        public virtual int sp_News_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_News_Insert(string name, string title, string description, string keyword, string content, string detail, string tag, string image, Nullable<System.DateTime> sDate, Nullable<bool> index, Nullable<bool> active, Nullable<int> ord, Nullable<int> idGroup)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var idGroupParameter = idGroup.HasValue ?
                new ObjectParameter("IdGroup", idGroup) :
                new ObjectParameter("IdGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Insert", nameParameter, titleParameter, descriptionParameter, keywordParameter, contentParameter, detailParameter, tagParameter, imageParameter, sDateParameter, indexParameter, activeParameter, ordParameter, idGroupParameter);
        }
    
        public virtual ObjectResult<sp_News_Paging_Result> sp_News_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_Paging_Result>("sp_News_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_News_Update(Nullable<int> id, string name, string title, string description, string keyword, string content, string detail, string tag, string image, Nullable<System.DateTime> sDate, Nullable<bool> index, Nullable<bool> active, Nullable<int> ord, Nullable<int> idGroup)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var idGroupParameter = idGroup.HasValue ?
                new ObjectParameter("IdGroup", idGroup) :
                new ObjectParameter("IdGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Update", idParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, contentParameter, detailParameter, tagParameter, imageParameter, sDateParameter, indexParameter, activeParameter, ordParameter, idGroupParameter);
        }
    
        public virtual int sp_Ord_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Ord_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Ord_GetByAll_Result> sp_Ord_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Ord_GetByAll_Result>("sp_Ord_GetByAll");
        }
    
        public virtual ObjectResult<sp_Ord_GetById_Result> sp_Ord_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Ord_GetById_Result>("sp_Ord_GetById", idParameter);
        }
    
        public virtual int sp_Ord_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Ord_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Ord_Insert(string name, string detail, string typePay, Nullable<float> amount, string tel, string address, string ward, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate, string status, Nullable<int> provinceId, Nullable<int> idCus)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var typePayParameter = typePay != null ?
                new ObjectParameter("TypePay", typePay) :
                new ObjectParameter("TypePay", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(float));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var wardParameter = ward != null ?
                new ObjectParameter("Ward", ward) :
                new ObjectParameter("Ward", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var idCusParameter = idCus.HasValue ?
                new ObjectParameter("IdCus", idCus) :
                new ObjectParameter("IdCus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Ord_Insert", nameParameter, detailParameter, typePayParameter, amountParameter, telParameter, addressParameter, wardParameter, sDateParameter, eDateParameter, statusParameter, provinceIdParameter, idCusParameter);
        }
    
        public virtual ObjectResult<sp_Ord_Paging_Result> sp_Ord_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Ord_Paging_Result>("sp_Ord_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Ord_Update(Nullable<int> id, string name, string detail, string typePay, Nullable<float> amount, string tel, string address, string ward, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate, string status, Nullable<int> provinceId, Nullable<int> idCus)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var typePayParameter = typePay != null ?
                new ObjectParameter("TypePay", typePay) :
                new ObjectParameter("TypePay", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(float));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var wardParameter = ward != null ?
                new ObjectParameter("Ward", ward) :
                new ObjectParameter("Ward", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var idCusParameter = idCus.HasValue ?
                new ObjectParameter("IdCus", idCus) :
                new ObjectParameter("IdCus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Ord_Update", idParameter, nameParameter, detailParameter, typePayParameter, amountParameter, telParameter, addressParameter, wardParameter, sDateParameter, eDateParameter, statusParameter, provinceIdParameter, idCusParameter);
        }
    
        public virtual int sp_OrderDetail_Delete(Nullable<int> id, Nullable<int> idPro)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrderDetail_Delete", idParameter, idProParameter);
        }
    
        public virtual ObjectResult<sp_OrderDetail_GetByAll_Result> sp_OrderDetail_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OrderDetail_GetByAll_Result>("sp_OrderDetail_GetByAll");
        }
    
        public virtual ObjectResult<sp_OrderDetail_GetById_Result> sp_OrderDetail_GetById(Nullable<int> id, Nullable<int> idPro)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OrderDetail_GetById_Result>("sp_OrderDetail_GetById", idParameter, idProParameter);
        }
    
        public virtual int sp_OrderDetail_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrderDetail_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_OrderDetail_Insert(Nullable<int> id, Nullable<int> number, Nullable<double> price, Nullable<double> total, Nullable<int> idOr, Nullable<int> idPro)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(double));
    
            var idOrParameter = idOr.HasValue ?
                new ObjectParameter("IdOr", idOr) :
                new ObjectParameter("IdOr", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrderDetail_Insert", idParameter, numberParameter, priceParameter, totalParameter, idOrParameter, idProParameter);
        }
    
        public virtual ObjectResult<sp_OrderDetail_Paging_Result> sp_OrderDetail_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OrderDetail_Paging_Result>("sp_OrderDetail_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_OrderDetail_Update(Nullable<int> id, Nullable<int> number, Nullable<double> price, Nullable<double> total, Nullable<int> idOr, Nullable<int> idPro)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(double));
    
            var idOrParameter = idOr.HasValue ?
                new ObjectParameter("IdOr", idOr) :
                new ObjectParameter("IdOr", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrderDetail_Update", idParameter, numberParameter, priceParameter, totalParameter, idOrParameter, idProParameter);
        }
    
        public virtual int sp_PermissionModule_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PermissionModule_Delete", iDParameter);
        }
    
        public virtual ObjectResult<sp_PermissionModule_GetByAll_Result> sp_PermissionModule_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PermissionModule_GetByAll_Result>("sp_PermissionModule_GetByAll");
        }
    
        public virtual ObjectResult<sp_PermissionModule_GetById_Result> sp_PermissionModule_GetById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PermissionModule_GetById_Result>("sp_PermissionModule_GetById", iDParameter);
        }
    
        public virtual int sp_PermissionModule_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PermissionModule_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_PermissionModule_Insert(Nullable<int> adminID, Nullable<int> adminModuleID)
        {
            var adminIDParameter = adminID.HasValue ?
                new ObjectParameter("AdminID", adminID) :
                new ObjectParameter("AdminID", typeof(int));
    
            var adminModuleIDParameter = adminModuleID.HasValue ?
                new ObjectParameter("AdminModuleID", adminModuleID) :
                new ObjectParameter("AdminModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PermissionModule_Insert", adminIDParameter, adminModuleIDParameter);
        }
    
        public virtual ObjectResult<sp_PermissionModule_Paging_Result> sp_PermissionModule_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PermissionModule_Paging_Result>("sp_PermissionModule_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_PermissionModule_Update(Nullable<int> iD, Nullable<int> adminID, Nullable<int> adminModuleID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var adminIDParameter = adminID.HasValue ?
                new ObjectParameter("AdminID", adminID) :
                new ObjectParameter("AdminID", typeof(int));
    
            var adminModuleIDParameter = adminModuleID.HasValue ?
                new ObjectParameter("AdminModuleID", adminModuleID) :
                new ObjectParameter("AdminModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PermissionModule_Update", iDParameter, adminIDParameter, adminModuleIDParameter);
        }
    
        public virtual int sp_Picture_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Picture_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Picture_GetByAll_Result> sp_Picture_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Picture_GetByAll_Result>("sp_Picture_GetByAll");
        }
    
        public virtual ObjectResult<sp_Picture_GetByAll_NameGroup_Result> sp_Picture_GetByAll_NameGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Picture_GetByAll_NameGroup_Result>("sp_Picture_GetByAll_NameGroup");
        }
    
        public virtual ObjectResult<sp_Picture_GetById_Result> sp_Picture_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Picture_GetById_Result>("sp_Picture_GetById", idParameter);
        }
    
        public virtual int sp_Picture_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Picture_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Picture_GetByTop_GroupName(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Picture_GetByTop_GroupName", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Picture_Insert(string name, string place, string tag, string image, Nullable<System.DateTime> sDate, Nullable<bool> index, Nullable<bool> active, Nullable<int> width, Nullable<int> height, Nullable<int> ord, Nullable<int> idCategory2, Nullable<int> idCategory)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var idCategory2Parameter = idCategory2.HasValue ?
                new ObjectParameter("IdCategory2", idCategory2) :
                new ObjectParameter("IdCategory2", typeof(int));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Picture_Insert", nameParameter, placeParameter, tagParameter, imageParameter, sDateParameter, indexParameter, activeParameter, widthParameter, heightParameter, ordParameter, idCategory2Parameter, idCategoryParameter);
        }
    
        public virtual ObjectResult<sp_Picture_Paging_Result> sp_Picture_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Picture_Paging_Result>("sp_Picture_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Picture_Update(Nullable<int> id, string name, string place, string tag, string image, Nullable<System.DateTime> sDate, Nullable<bool> index, Nullable<bool> active, Nullable<int> width, Nullable<int> height, Nullable<int> ord, Nullable<int> idCategory2, Nullable<int> idCategory)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var idCategory2Parameter = idCategory2.HasValue ?
                new ObjectParameter("IdCategory2", idCategory2) :
                new ObjectParameter("IdCategory2", typeof(int));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Picture_Update", idParameter, nameParameter, placeParameter, tagParameter, imageParameter, sDateParameter, indexParameter, activeParameter, widthParameter, heightParameter, ordParameter, idCategory2Parameter, idCategoryParameter);
        }
    
        public virtual int sp_Price_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Price_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Price_GetByAll_Result> sp_Price_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Price_GetByAll_Result>("sp_Price_GetByAll");
        }
    
        public virtual ObjectResult<sp_Price_GetById_Result> sp_Price_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Price_GetById_Result>("sp_Price_GetById", idParameter);
        }
    
        public virtual int sp_Price_GetBySDate(string where, string sDate)
        {
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var sDateParameter = sDate != null ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Price_GetBySDate", whereParameter, sDateParameter);
        }
    
        public virtual int sp_Price_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Price_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Price_Insert(string name, string tag, string quote, string promotion1, string promotion2, string album, string bigPhoto, string dress, Nullable<bool> active, Nullable<System.DateTime> sDate, string detail, Nullable<int> ord)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var quoteParameter = quote != null ?
                new ObjectParameter("Quote", quote) :
                new ObjectParameter("Quote", typeof(string));
    
            var promotion1Parameter = promotion1 != null ?
                new ObjectParameter("Promotion1", promotion1) :
                new ObjectParameter("Promotion1", typeof(string));
    
            var promotion2Parameter = promotion2 != null ?
                new ObjectParameter("Promotion2", promotion2) :
                new ObjectParameter("Promotion2", typeof(string));
    
            var albumParameter = album != null ?
                new ObjectParameter("Album", album) :
                new ObjectParameter("Album", typeof(string));
    
            var bigPhotoParameter = bigPhoto != null ?
                new ObjectParameter("BigPhoto", bigPhoto) :
                new ObjectParameter("BigPhoto", typeof(string));
    
            var dressParameter = dress != null ?
                new ObjectParameter("Dress", dress) :
                new ObjectParameter("Dress", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Price_Insert", nameParameter, tagParameter, quoteParameter, promotion1Parameter, promotion2Parameter, albumParameter, bigPhotoParameter, dressParameter, activeParameter, sDateParameter, detailParameter, ordParameter);
        }
    
        public virtual ObjectResult<sp_Price_Paging_Result> sp_Price_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Price_Paging_Result>("sp_Price_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Price_Update(Nullable<int> id, string name, string tag, string quote, string promotion1, string promotion2, string album, string bigPhoto, string dress, Nullable<bool> active, Nullable<System.DateTime> sDate, string detail, Nullable<int> ord)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var quoteParameter = quote != null ?
                new ObjectParameter("Quote", quote) :
                new ObjectParameter("Quote", typeof(string));
    
            var promotion1Parameter = promotion1 != null ?
                new ObjectParameter("Promotion1", promotion1) :
                new ObjectParameter("Promotion1", typeof(string));
    
            var promotion2Parameter = promotion2 != null ?
                new ObjectParameter("Promotion2", promotion2) :
                new ObjectParameter("Promotion2", typeof(string));
    
            var albumParameter = album != null ?
                new ObjectParameter("Album", album) :
                new ObjectParameter("Album", typeof(string));
    
            var bigPhotoParameter = bigPhoto != null ?
                new ObjectParameter("BigPhoto", bigPhoto) :
                new ObjectParameter("BigPhoto", typeof(string));
    
            var dressParameter = dress != null ?
                new ObjectParameter("Dress", dress) :
                new ObjectParameter("Dress", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Price_Update", idParameter, nameParameter, tagParameter, quoteParameter, promotion1Parameter, promotion2Parameter, albumParameter, bigPhotoParameter, dressParameter, activeParameter, sDateParameter, detailParameter, ordParameter);
        }
    
        public virtual int sp_PriceCity_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PriceCity_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_PriceCity_GetByAll_Result> sp_PriceCity_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PriceCity_GetByAll_Result>("sp_PriceCity_GetByAll");
        }
    
        public virtual ObjectResult<sp_PriceCity_GetById_Result> sp_PriceCity_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PriceCity_GetById_Result>("sp_PriceCity_GetById", idParameter);
        }
    
        public virtual int sp_PriceCity_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PriceCity_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_PriceCity_Insert(string name, string level, Nullable<int> ord, Nullable<double> price_ship)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var price_shipParameter = price_ship.HasValue ?
                new ObjectParameter("Price_ship", price_ship) :
                new ObjectParameter("Price_ship", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PriceCity_Insert", nameParameter, levelParameter, ordParameter, price_shipParameter);
        }
    
        public virtual ObjectResult<sp_PriceCity_Paging_Result> sp_PriceCity_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PriceCity_Paging_Result>("sp_PriceCity_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_PriceCity_Update(Nullable<int> id, string name, string level, Nullable<int> ord, Nullable<double> price_ship)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var price_shipParameter = price_ship.HasValue ?
                new ObjectParameter("Price_ship", price_ship) :
                new ObjectParameter("Price_ship", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PriceCity_Update", idParameter, nameParameter, levelParameter, ordParameter, price_shipParameter);
        }
    
        public virtual int sp_ProColor_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProColor_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_ProColor_GetByAll_Result> sp_ProColor_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProColor_GetByAll_Result>("sp_ProColor_GetByAll");
        }
    
        public virtual ObjectResult<sp_ProColor_GetById_Result> sp_ProColor_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProColor_GetById_Result>("sp_ProColor_GetById", idParameter);
        }
    
        public virtual int sp_ProColor_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProColor_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_ProColor_Insert(Nullable<int> idColor, Nullable<int> inventory)
        {
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("IdColor", idColor) :
                new ObjectParameter("IdColor", typeof(int));
    
            var inventoryParameter = inventory.HasValue ?
                new ObjectParameter("Inventory", inventory) :
                new ObjectParameter("Inventory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProColor_Insert", idColorParameter, inventoryParameter);
        }
    
        public virtual ObjectResult<sp_ProColor_Paging_Result> sp_ProColor_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProColor_Paging_Result>("sp_ProColor_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_ProColor_Update(Nullable<int> id, Nullable<int> idColor, Nullable<int> inventory)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("IdColor", idColor) :
                new ObjectParameter("IdColor", typeof(int));
    
            var inventoryParameter = inventory.HasValue ?
                new ObjectParameter("Inventory", inventory) :
                new ObjectParameter("Inventory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProColor_Update", idParameter, idColorParameter, inventoryParameter);
        }
    
        public virtual int sp_Product_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Product_GetByAll_Result> sp_Product_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_GetByAll_Result>("sp_Product_GetByAll");
        }
    
        public virtual ObjectResult<sp_Product_GetByAll_NameGroup_Result> sp_Product_GetByAll_NameGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_GetByAll_NameGroup_Result>("sp_Product_GetByAll_NameGroup");
        }
    
        public virtual ObjectResult<sp_Product_GetById_Result> sp_Product_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_GetById_Result>("sp_Product_GetById", idParameter);
        }
    
        public virtual int sp_Product_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Product_GetByTop_GroupName(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_GetByTop_GroupName", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Product_Insert(string code, string name, string title, string description, string keyword, string detail, Nullable<double> priceRetail, Nullable<double> pricePromotion, string warranty, Nullable<int> num, Nullable<int> inventory, Nullable<int> count, Nullable<int> view, Nullable<int> like, string tag, string image, Nullable<System.DateTime> sDate, Nullable<short> status, Nullable<bool> index, Nullable<bool> priority, Nullable<bool> active, Nullable<int> ord, Nullable<int> idCategory2, Nullable<int> idCategory)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var priceRetailParameter = priceRetail.HasValue ?
                new ObjectParameter("PriceRetail", priceRetail) :
                new ObjectParameter("PriceRetail", typeof(double));
    
            var pricePromotionParameter = pricePromotion.HasValue ?
                new ObjectParameter("PricePromotion", pricePromotion) :
                new ObjectParameter("PricePromotion", typeof(double));
    
            var warrantyParameter = warranty != null ?
                new ObjectParameter("Warranty", warranty) :
                new ObjectParameter("Warranty", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("Num", num) :
                new ObjectParameter("Num", typeof(int));
    
            var inventoryParameter = inventory.HasValue ?
                new ObjectParameter("Inventory", inventory) :
                new ObjectParameter("Inventory", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var viewParameter = view.HasValue ?
                new ObjectParameter("View", view) :
                new ObjectParameter("View", typeof(int));
    
            var likeParameter = like.HasValue ?
                new ObjectParameter("Like", like) :
                new ObjectParameter("Like", typeof(int));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(short));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var idCategory2Parameter = idCategory2.HasValue ?
                new ObjectParameter("IdCategory2", idCategory2) :
                new ObjectParameter("IdCategory2", typeof(int));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Insert", codeParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, detailParameter, priceRetailParameter, pricePromotionParameter, warrantyParameter, numParameter, inventoryParameter, countParameter, viewParameter, likeParameter, tagParameter, imageParameter, sDateParameter, statusParameter, indexParameter, priorityParameter, activeParameter, ordParameter, idCategory2Parameter, idCategoryParameter);
        }
    
        public virtual ObjectResult<sp_Product_Paging_Result> sp_Product_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_Paging_Result>("sp_Product_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Product_Update(Nullable<int> id, string code, string name, string title, string description, string keyword, string detail, Nullable<double> priceRetail, Nullable<double> pricePromotion, string warranty, Nullable<int> num, Nullable<int> inventory, Nullable<int> count, Nullable<int> view, Nullable<int> like, string tag, string image, Nullable<System.DateTime> sDate, Nullable<short> status, Nullable<bool> index, Nullable<bool> priority, Nullable<bool> active, Nullable<int> ord, Nullable<int> idCategory2, Nullable<int> idCategory)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var priceRetailParameter = priceRetail.HasValue ?
                new ObjectParameter("PriceRetail", priceRetail) :
                new ObjectParameter("PriceRetail", typeof(double));
    
            var pricePromotionParameter = pricePromotion.HasValue ?
                new ObjectParameter("PricePromotion", pricePromotion) :
                new ObjectParameter("PricePromotion", typeof(double));
    
            var warrantyParameter = warranty != null ?
                new ObjectParameter("Warranty", warranty) :
                new ObjectParameter("Warranty", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("Num", num) :
                new ObjectParameter("Num", typeof(int));
    
            var inventoryParameter = inventory.HasValue ?
                new ObjectParameter("Inventory", inventory) :
                new ObjectParameter("Inventory", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var viewParameter = view.HasValue ?
                new ObjectParameter("View", view) :
                new ObjectParameter("View", typeof(int));
    
            var likeParameter = like.HasValue ?
                new ObjectParameter("Like", like) :
                new ObjectParameter("Like", typeof(int));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(short));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var idCategory2Parameter = idCategory2.HasValue ?
                new ObjectParameter("IdCategory2", idCategory2) :
                new ObjectParameter("IdCategory2", typeof(int));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Update", idParameter, codeParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, detailParameter, priceRetailParameter, pricePromotionParameter, warrantyParameter, numParameter, inventoryParameter, countParameter, viewParameter, likeParameter, tagParameter, imageParameter, sDateParameter, statusParameter, indexParameter, priorityParameter, activeParameter, ordParameter, idCategory2Parameter, idCategoryParameter);
        }
    
        public virtual int sp_ProImage_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProImage_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_ProImage_GetByAll_Result> sp_ProImage_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProImage_GetByAll_Result>("sp_ProImage_GetByAll");
        }
    
        public virtual ObjectResult<sp_ProImage_GetById_Result> sp_ProImage_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProImage_GetById_Result>("sp_ProImage_GetById", idParameter);
        }
    
        public virtual int sp_ProImage_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProImage_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_ProImage_Insert(string image, Nullable<System.DateTime> sDate, Nullable<int> ord, Nullable<int> idPro)
        {
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProImage_Insert", imageParameter, sDateParameter, ordParameter, idProParameter);
        }
    
        public virtual ObjectResult<sp_ProImage_Paging_Result> sp_ProImage_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProImage_Paging_Result>("sp_ProImage_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_ProImage_Update(Nullable<int> id, string image, Nullable<System.DateTime> sDate, Nullable<int> ord, Nullable<int> idPro)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProImage_Update", idParameter, imageParameter, sDateParameter, ordParameter, idProParameter);
        }
    
        public virtual int sp_ProPrice_Delete(Nullable<int> id, Nullable<int> idPro)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProPrice_Delete", idParameter, idProParameter);
        }
    
        public virtual ObjectResult<sp_ProPrice_GetByAll_Result> sp_ProPrice_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProPrice_GetByAll_Result>("sp_ProPrice_GetByAll");
        }
    
        public virtual ObjectResult<sp_ProPrice_GetById_Result> sp_ProPrice_GetById(Nullable<int> id, Nullable<int> idPro)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProPrice_GetById_Result>("sp_ProPrice_GetById", idParameter, idProParameter);
        }
    
        public virtual int sp_ProPrice_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProPrice_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_ProPrice_Insert(Nullable<int> idPro, string priceImport, string priceExport_S, string priceExport_L, string pricePromotion, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate, Nullable<int> ord, Nullable<System.DateTime> date)
        {
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            var priceImportParameter = priceImport != null ?
                new ObjectParameter("PriceImport", priceImport) :
                new ObjectParameter("PriceImport", typeof(string));
    
            var priceExport_SParameter = priceExport_S != null ?
                new ObjectParameter("PriceExport_S", priceExport_S) :
                new ObjectParameter("PriceExport_S", typeof(string));
    
            var priceExport_LParameter = priceExport_L != null ?
                new ObjectParameter("PriceExport_L", priceExport_L) :
                new ObjectParameter("PriceExport_L", typeof(string));
    
            var pricePromotionParameter = pricePromotion != null ?
                new ObjectParameter("PricePromotion", pricePromotion) :
                new ObjectParameter("PricePromotion", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProPrice_Insert", idProParameter, priceImportParameter, priceExport_SParameter, priceExport_LParameter, pricePromotionParameter, sDateParameter, eDateParameter, ordParameter, dateParameter);
        }
    
        public virtual ObjectResult<sp_ProPrice_Paging_Result> sp_ProPrice_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProPrice_Paging_Result>("sp_ProPrice_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_ProPrice_Update(Nullable<int> id, Nullable<int> idPro, string priceImport, string priceExport_S, string priceExport_L, string pricePromotion, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate, Nullable<int> ord, Nullable<System.DateTime> date)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            var priceImportParameter = priceImport != null ?
                new ObjectParameter("PriceImport", priceImport) :
                new ObjectParameter("PriceImport", typeof(string));
    
            var priceExport_SParameter = priceExport_S != null ?
                new ObjectParameter("PriceExport_S", priceExport_S) :
                new ObjectParameter("PriceExport_S", typeof(string));
    
            var priceExport_LParameter = priceExport_L != null ?
                new ObjectParameter("PriceExport_L", priceExport_L) :
                new ObjectParameter("PriceExport_L", typeof(string));
    
            var pricePromotionParameter = pricePromotion != null ?
                new ObjectParameter("PricePromotion", pricePromotion) :
                new ObjectParameter("PricePromotion", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProPrice_Update", idParameter, idProParameter, priceImportParameter, priceExport_SParameter, priceExport_LParameter, pricePromotionParameter, sDateParameter, eDateParameter, ordParameter, dateParameter);
        }
    
        public virtual int sp_ProSize_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProSize_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_ProSize_GetByAll_Result> sp_ProSize_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProSize_GetByAll_Result>("sp_ProSize_GetByAll");
        }
    
        public virtual ObjectResult<sp_ProSize_GetById_Result> sp_ProSize_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProSize_GetById_Result>("sp_ProSize_GetById", idParameter);
        }
    
        public virtual int sp_ProSize_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProSize_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_ProSize_Insert(Nullable<int> idSize, Nullable<int> inventory)
        {
            var idSizeParameter = idSize.HasValue ?
                new ObjectParameter("IdSize", idSize) :
                new ObjectParameter("IdSize", typeof(int));
    
            var inventoryParameter = inventory.HasValue ?
                new ObjectParameter("Inventory", inventory) :
                new ObjectParameter("Inventory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProSize_Insert", idSizeParameter, inventoryParameter);
        }
    
        public virtual ObjectResult<sp_ProSize_Paging_Result> sp_ProSize_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProSize_Paging_Result>("sp_ProSize_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_ProSize_Update(Nullable<int> id, Nullable<int> idSize, Nullable<int> inventory)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idSizeParameter = idSize.HasValue ?
                new ObjectParameter("IdSize", idSize) :
                new ObjectParameter("IdSize", typeof(int));
    
            var inventoryParameter = inventory.HasValue ?
                new ObjectParameter("Inventory", inventory) :
                new ObjectParameter("Inventory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProSize_Update", idParameter, idSizeParameter, inventoryParameter);
        }
    
        public virtual int sp_Province_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Province_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Province_GetByAll_Result> sp_Province_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Province_GetByAll_Result>("sp_Province_GetByAll");
        }
    
        public virtual ObjectResult<sp_Province_GetById_Result> sp_Province_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Province_GetById_Result>("sp_Province_GetById", idParameter);
        }
    
        public virtual int sp_Province_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Province_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Province_Insert(string name, string level, Nullable<int> price, Nullable<int> ord, Nullable<bool> active, string time, Nullable<double> price1, Nullable<double> price2, string time1, string time2)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var timeParameter = time != null ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(string));
    
            var price1Parameter = price1.HasValue ?
                new ObjectParameter("Price1", price1) :
                new ObjectParameter("Price1", typeof(double));
    
            var price2Parameter = price2.HasValue ?
                new ObjectParameter("Price2", price2) :
                new ObjectParameter("Price2", typeof(double));
    
            var time1Parameter = time1 != null ?
                new ObjectParameter("Time1", time1) :
                new ObjectParameter("Time1", typeof(string));
    
            var time2Parameter = time2 != null ?
                new ObjectParameter("Time2", time2) :
                new ObjectParameter("Time2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Province_Insert", nameParameter, levelParameter, priceParameter, ordParameter, activeParameter, timeParameter, price1Parameter, price2Parameter, time1Parameter, time2Parameter);
        }
    
        public virtual ObjectResult<sp_Province_Paging_Result> sp_Province_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Province_Paging_Result>("sp_Province_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Province_Price_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Province_Price_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Province_Price_GetByAll_Result> sp_Province_Price_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Province_Price_GetByAll_Result>("sp_Province_Price_GetByAll");
        }
    
        public virtual int sp_Province_Price_Insert(Nullable<int> provinceId, Nullable<double> from, Nullable<double> to, Nullable<double> priceN, Nullable<double> priceC, Nullable<double> priceO)
        {
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(double));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(double));
    
            var priceNParameter = priceN.HasValue ?
                new ObjectParameter("PriceN", priceN) :
                new ObjectParameter("PriceN", typeof(double));
    
            var priceCParameter = priceC.HasValue ?
                new ObjectParameter("PriceC", priceC) :
                new ObjectParameter("PriceC", typeof(double));
    
            var priceOParameter = priceO.HasValue ?
                new ObjectParameter("PriceO", priceO) :
                new ObjectParameter("PriceO", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Province_Price_Insert", provinceIdParameter, fromParameter, toParameter, priceNParameter, priceCParameter, priceOParameter);
        }
    
        public virtual int sp_Province_Price_Update(Nullable<int> id, Nullable<int> provinceId, Nullable<double> from, Nullable<double> to, Nullable<double> priceN, Nullable<double> priceC, Nullable<double> priceO)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(double));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(double));
    
            var priceNParameter = priceN.HasValue ?
                new ObjectParameter("PriceN", priceN) :
                new ObjectParameter("PriceN", typeof(double));
    
            var priceCParameter = priceC.HasValue ?
                new ObjectParameter("PriceC", priceC) :
                new ObjectParameter("PriceC", typeof(double));
    
            var priceOParameter = priceO.HasValue ?
                new ObjectParameter("PriceO", priceO) :
                new ObjectParameter("PriceO", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Province_Price_Update", idParameter, provinceIdParameter, fromParameter, toParameter, priceNParameter, priceCParameter, priceOParameter);
        }
    
        public virtual int sp_Province_Update(Nullable<int> id, string name, string level, Nullable<int> price, Nullable<int> ord, Nullable<bool> active, string time, Nullable<double> price1, Nullable<double> price2, string time1, string time2)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var timeParameter = time != null ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(string));
    
            var price1Parameter = price1.HasValue ?
                new ObjectParameter("Price1", price1) :
                new ObjectParameter("Price1", typeof(double));
    
            var price2Parameter = price2.HasValue ?
                new ObjectParameter("Price2", price2) :
                new ObjectParameter("Price2", typeof(double));
    
            var time1Parameter = time1 != null ?
                new ObjectParameter("Time1", time1) :
                new ObjectParameter("Time1", typeof(string));
    
            var time2Parameter = time2 != null ?
                new ObjectParameter("Time2", time2) :
                new ObjectParameter("Time2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Province_Update", idParameter, nameParameter, levelParameter, priceParameter, ordParameter, activeParameter, timeParameter, price1Parameter, price2Parameter, time1Parameter, time2Parameter);
        }
    
        public virtual int sp_Recipient_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Recipient_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Recipient_GetByAll_Result> sp_Recipient_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Recipient_GetByAll_Result>("sp_Recipient_GetByAll");
        }
    
        public virtual ObjectResult<sp_Recipient_GetById_Result> sp_Recipient_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Recipient_GetById_Result>("sp_Recipient_GetById", idParameter);
        }
    
        public virtual int sp_Recipient_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Recipient_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Recipient_Insert(Nullable<int> idCus, string name, string email, string tel, string address, Nullable<System.DateTime> sDate, Nullable<int> status)
        {
            var idCusParameter = idCus.HasValue ?
                new ObjectParameter("IdCus", idCus) :
                new ObjectParameter("IdCus", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Recipient_Insert", idCusParameter, nameParameter, emailParameter, telParameter, addressParameter, sDateParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_Recipient_Paging_Result> sp_Recipient_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Recipient_Paging_Result>("sp_Recipient_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Recipient_Update(Nullable<int> id, Nullable<int> idCus, string name, string email, string tel, string address, Nullable<System.DateTime> sDate, Nullable<int> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idCusParameter = idCus.HasValue ?
                new ObjectParameter("IdCus", idCus) :
                new ObjectParameter("IdCus", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Recipient_Update", idParameter, idCusParameter, nameParameter, emailParameter, telParameter, addressParameter, sDateParameter, statusParameter);
        }
    
        public virtual int sp_SearchPrice_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SearchPrice_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_SearchPrice_GetByAll_Result> sp_SearchPrice_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SearchPrice_GetByAll_Result>("sp_SearchPrice_GetByAll");
        }
    
        public virtual ObjectResult<sp_SearchPrice_GetById_Result> sp_SearchPrice_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SearchPrice_GetById_Result>("sp_SearchPrice_GetById", idParameter);
        }
    
        public virtual int sp_SearchPrice_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SearchPrice_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_SearchPrice_Insert(string name, Nullable<int> priceFrom, Nullable<int> priceTo, Nullable<int> ord, Nullable<bool> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var priceFromParameter = priceFrom.HasValue ?
                new ObjectParameter("PriceFrom", priceFrom) :
                new ObjectParameter("PriceFrom", typeof(int));
    
            var priceToParameter = priceTo.HasValue ?
                new ObjectParameter("PriceTo", priceTo) :
                new ObjectParameter("PriceTo", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SearchPrice_Insert", nameParameter, priceFromParameter, priceToParameter, ordParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_SearchPrice_Paging_Result> sp_SearchPrice_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SearchPrice_Paging_Result>("sp_SearchPrice_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_SearchPrice_Update(Nullable<int> id, string name, Nullable<int> priceFrom, Nullable<int> priceTo, Nullable<int> ord, Nullable<bool> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var priceFromParameter = priceFrom.HasValue ?
                new ObjectParameter("PriceFrom", priceFrom) :
                new ObjectParameter("PriceFrom", typeof(int));
    
            var priceToParameter = priceTo.HasValue ?
                new ObjectParameter("PriceTo", priceTo) :
                new ObjectParameter("PriceTo", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SearchPrice_Update", idParameter, nameParameter, priceFromParameter, priceToParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_Shop_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Shop_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Shop_GetByAll_Result> sp_Shop_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Shop_GetByAll_Result>("sp_Shop_GetByAll");
        }
    
        public virtual ObjectResult<sp_Shop_GetById_Result> sp_Shop_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Shop_GetById_Result>("sp_Shop_GetById", idParameter);
        }
    
        public virtual int sp_Shop_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Shop_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Shop_Insert(string name, string address, string tel, string description, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Shop_Insert", nameParameter, addressParameter, telParameter, descriptionParameter, sDateParameter, eDateParameter);
        }
    
        public virtual ObjectResult<sp_Shop_Paging_Result> sp_Shop_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Shop_Paging_Result>("sp_Shop_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Shop_Update(Nullable<int> id, string name, string address, string tel, string description, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Shop_Update", idParameter, nameParameter, addressParameter, telParameter, descriptionParameter, sDateParameter, eDateParameter);
        }
    
        public virtual int sp_Size_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Size_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Size_GetByAll_Result> sp_Size_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Size_GetByAll_Result>("sp_Size_GetByAll");
        }
    
        public virtual ObjectResult<sp_Size_GetById_Result> sp_Size_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Size_GetById_Result>("sp_Size_GetById", idParameter);
        }
    
        public virtual int sp_Size_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Size_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Size_Insert(string name, string description, Nullable<int> ord, Nullable<bool> active, Nullable<bool> @default)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var defaultParameter = @default.HasValue ?
                new ObjectParameter("Default", @default) :
                new ObjectParameter("Default", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Size_Insert", nameParameter, descriptionParameter, ordParameter, activeParameter, defaultParameter);
        }
    
        public virtual ObjectResult<sp_Size_Paging_Result> sp_Size_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Size_Paging_Result>("sp_Size_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Size_Update(Nullable<int> id, string name, string description, Nullable<int> ord, Nullable<bool> active, Nullable<bool> @default)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var defaultParameter = @default.HasValue ?
                new ObjectParameter("Default", @default) :
                new ObjectParameter("Default", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Size_Update", idParameter, nameParameter, descriptionParameter, ordParameter, activeParameter, defaultParameter);
        }
    
        public virtual int sp_Supplier_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Supplier_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Supplier_GetByAll_Result> sp_Supplier_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Supplier_GetByAll_Result>("sp_Supplier_GetByAll");
        }
    
        public virtual ObjectResult<sp_Supplier_GetById_Result> sp_Supplier_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Supplier_GetById_Result>("sp_Supplier_GetById", idParameter);
        }
    
        public virtual int sp_Supplier_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Supplier_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Supplier_Insert(string name, string email, string address, string tel, string website, Nullable<int> idCountry)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var idCountryParameter = idCountry.HasValue ?
                new ObjectParameter("IdCountry", idCountry) :
                new ObjectParameter("IdCountry", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Supplier_Insert", nameParameter, emailParameter, addressParameter, telParameter, websiteParameter, idCountryParameter);
        }
    
        public virtual ObjectResult<sp_Supplier_Paging_Result> sp_Supplier_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Supplier_Paging_Result>("sp_Supplier_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Supplier_Update(Nullable<int> id, string name, string email, string address, string tel, string website, Nullable<int> idCountry)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var idCountryParameter = idCountry.HasValue ?
                new ObjectParameter("IdCountry", idCountry) :
                new ObjectParameter("IdCountry", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Supplier_Update", idParameter, nameParameter, emailParameter, addressParameter, telParameter, websiteParameter, idCountryParameter);
        }
    
        public virtual int sp_Support_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Support_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Support_GetByAll_Result> sp_Support_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Support_GetByAll_Result>("sp_Support_GetByAll");
        }
    
        public virtual ObjectResult<sp_Support_GetById_Result> sp_Support_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Support_GetById_Result>("sp_Support_GetById", idParameter);
        }
    
        public virtual int sp_Support_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Support_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Support_Insert(string name, string tel, string skype, Nullable<bool> active, Nullable<int> ord)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var skypeParameter = skype != null ?
                new ObjectParameter("Skype", skype) :
                new ObjectParameter("Skype", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Support_Insert", nameParameter, telParameter, skypeParameter, activeParameter, ordParameter);
        }
    
        public virtual ObjectResult<sp_Support_Paging_Result> sp_Support_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Support_Paging_Result>("sp_Support_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Support_Update(Nullable<int> id, string name, string tel, string skype, Nullable<bool> active, Nullable<int> ord)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var skypeParameter = skype != null ?
                new ObjectParameter("Skype", skype) :
                new ObjectParameter("Skype", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Support_Update", idParameter, nameParameter, telParameter, skypeParameter, activeParameter, ordParameter);
        }
    
        public virtual int sp_User_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_Delete", iDParameter);
        }
    
        public virtual ObjectResult<sp_User_GetByAll_Result> sp_User_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_GetByAll_Result>("sp_User_GetByAll");
        }
    
        public virtual ObjectResult<sp_User_GetById_Result> sp_User_GetById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_GetById_Result>("sp_User_GetById", iDParameter);
        }
    
        public virtual int sp_User_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_User_Insert(string fullName, string userName, string password, Nullable<bool> gender, Nullable<System.DateTime> dateOfBirth, string email, string phone, string address, string avatar, string signature, Nullable<System.DateTime> joinedTime, string description, Nullable<bool> active, Nullable<int> creatorID, Nullable<short> permission)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var avatarParameter = avatar != null ?
                new ObjectParameter("Avatar", avatar) :
                new ObjectParameter("Avatar", typeof(string));
    
            var signatureParameter = signature != null ?
                new ObjectParameter("Signature", signature) :
                new ObjectParameter("Signature", typeof(string));
    
            var joinedTimeParameter = joinedTime.HasValue ?
                new ObjectParameter("JoinedTime", joinedTime) :
                new ObjectParameter("JoinedTime", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var creatorIDParameter = creatorID.HasValue ?
                new ObjectParameter("CreatorID", creatorID) :
                new ObjectParameter("CreatorID", typeof(int));
    
            var permissionParameter = permission.HasValue ?
                new ObjectParameter("Permission", permission) :
                new ObjectParameter("Permission", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_Insert", fullNameParameter, userNameParameter, passwordParameter, genderParameter, dateOfBirthParameter, emailParameter, phoneParameter, addressParameter, avatarParameter, signatureParameter, joinedTimeParameter, descriptionParameter, activeParameter, creatorIDParameter, permissionParameter);
        }
    
        public virtual ObjectResult<sp_User_Paging_Result> sp_User_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_Paging_Result>("sp_User_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_User_Update(Nullable<int> iD, string fullName, string userName, string password, Nullable<bool> gender, Nullable<System.DateTime> dateOfBirth, string email, string phone, string address, string avatar, string signature, Nullable<System.DateTime> joinedTime, string description, Nullable<bool> active, Nullable<int> creatorID, Nullable<short> permission)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(bool));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var avatarParameter = avatar != null ?
                new ObjectParameter("Avatar", avatar) :
                new ObjectParameter("Avatar", typeof(string));
    
            var signatureParameter = signature != null ?
                new ObjectParameter("Signature", signature) :
                new ObjectParameter("Signature", typeof(string));
    
            var joinedTimeParameter = joinedTime.HasValue ?
                new ObjectParameter("JoinedTime", joinedTime) :
                new ObjectParameter("JoinedTime", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var creatorIDParameter = creatorID.HasValue ?
                new ObjectParameter("CreatorID", creatorID) :
                new ObjectParameter("CreatorID", typeof(int));
    
            var permissionParameter = permission.HasValue ?
                new ObjectParameter("Permission", permission) :
                new ObjectParameter("Permission", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_Update", iDParameter, fullNameParameter, userNameParameter, passwordParameter, genderParameter, dateOfBirthParameter, emailParameter, phoneParameter, addressParameter, avatarParameter, signatureParameter, joinedTimeParameter, descriptionParameter, activeParameter, creatorIDParameter, permissionParameter);
        }
    
        public virtual int sp_UserModule_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserModule_Delete", iDParameter);
        }
    
        public virtual ObjectResult<sp_UserModule_GetByAll_Result> sp_UserModule_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserModule_GetByAll_Result>("sp_UserModule_GetByAll");
        }
    
        public virtual ObjectResult<sp_UserModule_GetById_Result> sp_UserModule_GetById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserModule_GetById_Result>("sp_UserModule_GetById", iDParameter);
        }
    
        public virtual int sp_UserModule_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserModule_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_UserModule_Insert(string name, string description, Nullable<bool> active, Nullable<int> ord)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserModule_Insert", nameParameter, descriptionParameter, activeParameter, ordParameter);
        }
    
        public virtual ObjectResult<sp_UserModule_Paging_Result> sp_UserModule_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserModule_Paging_Result>("sp_UserModule_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_UserModule_Update(Nullable<int> iD, string name, string description, Nullable<bool> active, Nullable<int> ord)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserModule_Update", iDParameter, nameParameter, descriptionParameter, activeParameter, ordParameter);
        }
    
        public virtual int sp_WareHouse_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_WareHouse_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_WareHouse_GetByAll_Result> sp_WareHouse_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_WareHouse_GetByAll_Result>("sp_WareHouse_GetByAll");
        }
    
        public virtual ObjectResult<sp_WareHouse_GetById_Result> sp_WareHouse_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_WareHouse_GetById_Result>("sp_WareHouse_GetById", idParameter);
        }
    
        public virtual int sp_WareHouse_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_WareHouse_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_WareHouse_Insert(string name, string address, string tel, string description, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_WareHouse_Insert", nameParameter, addressParameter, telParameter, descriptionParameter, sDateParameter, eDateParameter);
        }
    
        public virtual ObjectResult<sp_WareHouse_Paging_Result> sp_WareHouse_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_WareHouse_Paging_Result>("sp_WareHouse_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_WareHouse_Update(Nullable<int> id, string name, string address, string tel, string description, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_WareHouse_Update", idParameter, nameParameter, addressParameter, telParameter, descriptionParameter, sDateParameter, eDateParameter);
        }
    }
}
